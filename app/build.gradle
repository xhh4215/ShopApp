plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.alibaba.arouter'
}
apply from: '../dependency.gradle'
apply plugin: 'com.tencent.vasdolly'

def ext = rootProject.ext
def dependency = rootProject.ext.dependencies
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
        generateStubs = true
    }
}
android {
    signingConfigs {
        release {
            storeFile file('/Users/xh/project/android_project/ShopApp/shopapp')
            storePassword 'xh123123'
            keyAlias 'shop_app'
            keyPassword 'xh123123'
        }
        debug {
            storeFile file('/Users/xh/project/android_project/ShopApp/shopapp')
            storePassword 'xh123123'
            keyAlias 'shop_app'
            keyPassword 'xh123123'
        }
    }
    compileSdk ext.compileSdkVersion
    defaultConfig {
        applicationId "com.example.shopapp"
        minSdk ext.minSdkVersion
        targetSdk ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}
channel {
    //指定渠道文件
    channelFile = file("/Users/xh/project/android_project/ShopApp/channel.txt")
    //多渠道包的输出目录，默认为new File(project.buildDir,"channel")
    outputDir = new File(project.buildDir, "build_apk_path")
    //多渠道包的命名规则，默认为：${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}-${buildTime}
    apkNameFormat = '${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}'
    //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）
    fastMode = false
    //buildTime的时间格式，默认格式：yyyyMMdd-HHmmss
    buildTimeDateFormat = 'yyyyMMdd-HH:mm:ss'
    //低内存模式（仅针对V2签名，默认为false）：只把签名块、中央目录和EOCD读取到内存，不把最大头的内容块读取到内存，在手机上合成APK时，可以使用该模式
    lowMemory = false
}
rebuildChannel {
    //指定渠道文件
    channelFile = file("/Users/leon/Downloads/testReChannel.txt")
    // 已有APK文件地址（必填）,如new File(project.rootDir, "/baseApk/app_base.apk"),文件名中的base将被替换为渠道名
    baseApk = new File(project.buildDir, "build_apk_path/app_base.apk")
    //默认为new File(project.buildDir, "rebuildChannel")
    outputDir =  new File(project.buildDir, "rebuild_apk_path")
    //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）
    fastMode = false
    //低内存模式（仅针对V2签名，默认为false）：只把签名块、中央目录和EOCD读取到内存，不把最大头的内容块读取到内存，在手机上合成APK时，可以使用该模式
    lowMemory = false
}
dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    api dependency.appcompat
    implementation project(path: ':biz_detail')
    implementation project(path: ':biz_home')
    implementation project(path: ':biz_login')
    implementation project(path: ':hi-ui')
    implementation project(path: ':hi-library')
    implementation project(path: ':common')
    implementation project(path: ':biz_search')
    implementation project(path: ':biz_order')
    debugImplementation project(path: ':debug_tools')
    //arouter路由
    implementation dependency.arouter_api
    kapt dependency.arouter_compiler
    api dependency.vasdolly_version

}